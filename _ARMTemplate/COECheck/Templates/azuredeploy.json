{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 15
    },
    "svcPlanSize": {
      "type": "string",
      "defaultValue": "F1",
      "metadata": {
        "description": "The instance size of the App Service Plan."
      }
    },
    "svcPlanSku": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Free",
      "metadata": {
        "description": "The pricing tier of the App Service plan."
      }
    },
    "aadClientId": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "defaultValue": "00000000-0000-0000-0000-000000000000"
      }
    }
  },
  "variables": {
    "appName": "[concat(parameters('appName'), substring(uniqueString(resourceGroup().id), 0, 5))]",
    "repoUrl": "https://github.com/ivegamsft/COECheck.git",
    "repoBranch": "master",
    "documentDbDatabaseName": "coecheck",
    "documentDbApiVersion": "2020-04-01",
    "storageApiVersion": "2021-06-01",
    "insightsApiVersion": "2015-04-01",
    "insightsComponentsApiVersion": "2020-02-02",
    "webappsApiVersion": "2021-02-01"
  },
  "resources": [
    {
      "name": "[variables('appName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('webappsApiVersion')]",
      "dependsOn": [],
      "tags": {
        "displayName": "AppServicePlan"
      },
      "sku": {
        "name": "[parameters('svcPlanSize')]",
        "tier": "[parameters('svcPlanSku')]",
        "capacity": 1
      }
    },
    {
      "name": "[variables('appName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('webappsApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('appName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('appName'))]": "Resource",
        "displayName": "WebApp"
      },
      "properties": {
        "name": "[variables('appName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', variables('appName'))]"
      },
      "resources": [
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "[variables('webappsApiVersion')]",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('appName'))]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('appName'))]",
            "[concat('Microsoft.DocumentDB/databaseAccounts/', variables('appName'))]"
          ],
          "tags": {
            "displayName": "AppSettings"
          },
          "properties": {
            "AAD_CLIENT_ID": "[parameters('aadClientId')]",
            "DOCUMENTDB_ENDPOINT": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('appName'))).documentEndpoint]",
            "DOCUMENTDB_PRIMARY_KEY": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('appName')), variables('documentDbApiVersion')).primaryMasterKey]",
            "DOCUMENTDB_DATABASE": "[variables('documentDbDatabaseName')]",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', concat(variables('appName'), '-', 'components')), variables('insightsComponentsApiVersion')).InstrumentationKey]"
          }
        },
        {
          "apiVersion": "[variables('webappsApiVersion')]",
          "name": "logs",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('appName'))]"
          ],
          "properties": {
            "applicationLogs": {
              "fileSystem": {
                "level": "Verbose"
              }
            },
            "httpLogs": {
              "fileSystem": {
                "retentionInMb": 40,
                "enabled": true
              }
            },
            "failedRequestsTracing": {
              "enabled": true
            },
            "detailedErrorMessages": {
              "enabled": false
            }
          },
          "tags": {
            "displayName": "Logging"
          }
        },
        {
          "apiVersion": "[variables('webappsApiVersion')]",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('appName'))]"
          ],
          "properties": {
            "repoUrl": "[variables('repoUrl')]",
            "branch": "[variables('repoBranch')]",
            "IsManualIntegration": true
          },
          "tags": {
            "displayName": "Deployment"
          }
        }
      ]
    },
    {
      "name": "[variables('appName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('storageApiVersion')]",
      "dependsOn": [],
      "tags": {
        "displayName": "StorageAccount"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {}
    },
    {
      "apiVersion": "[variables('documentDbApiVersion')]",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[variables('appName')]",
      "location": "[resourceGroup().location]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[resourceGroup().location]"
          }
        ]
      },
      "tags": {
        "displayName": "DocumentDB"
      }
    },
    {
      "name": "[concat(variables('appName'), '-', 'autoscale')]",
      "type": "Microsoft.Insights/autoscalesettings",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('insightsApiVersion')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceId('Microsoft.Web/serverfarms', variables('appName')))]": "Resource",
        "displayName": "AutoScaleSettings"
      },
      "properties": {
        "name": "[concat(variables('appName'), '-', 'autoscale')]",
        "profiles": [
          {
            "name": "Default",
            "capacity": {
              "minimum": "1",
              "maximum": "2",
              "default": "1"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('appName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 80
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT10M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('appName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT1H",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 60
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT1H"
                }
              }
            ]
          }
        ],
        "enabled": false,
        "targetResourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('appName'))]"
      }
    },
    {
      "name": "[concat(variables('appName'), '-', 'components')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('insightsComponentsApiVersion')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appName'))]"
      ],
      "tags": {
        "displayName": "AppInsights-Component"
      },
      "properties": {
        "applicationId": "[resourceId('Microsoft.Web/sites', variables('appName'))]"
      }
    }
  ],
  "outputs": {
  }
}
